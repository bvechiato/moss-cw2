;; sum the product of neighbours' opinions
;; low value means less clustering of opinions
to get-global-echo-chamber-evaluation 
  set global-echo-chamber-evaluation 0
  ask users [
    ask (turtle-set following)  [
      set global-echo-chamber-evaluation global-echo-chamber-evaluation + sign belief * sign [belief] of myself
    ]
  ]
end

to-report sign [x]
  ifelse x > 0 [
    report 1
  ] [
    ifelse x < 0 [
      report -1
    ] [
      report 0
    ]
  ]
end


;;;;;;;;;;;;;
;;; PLOTS ;;;
;;;;;;;;;;;;;
to update-opinion-distribution
  ask users [
    ;; if user has any followers
    if length following > 0 [
      let echochamber 0
      
      ;; loop over the users the current user is following
      ask (turtle-set following)  [
        ;; add to my echo chamber as the belief difference between myself and the one I'm following
        set echochamber echochamber + abs(belief - [belief] of myself)
      ]

      ;; set user's average echo chamber influence
      set average-echo echochamber / length following
    ]
  ]
end

