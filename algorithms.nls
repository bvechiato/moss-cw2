;; note this package declares the following variables and procedures
;; so you must not use these names unless referring to these.
;;
;; procedures: find-tweets-in-belief-range
;;             find-random-tweets
;;             find-most-recent-tweets
;;             find-most-popular-tweets

;;;;;;;;;;;;;;;;;;;;
;;; BELIEF LOCAL ;;;
;;;;;;;;;;;;;;;;;;;;
to-report find-tweets-in-belief-range-local
  let min-belief belief - 0.5
  let max-belief belief + 0.5
  
  ;; Gather tweets within the belief range and local network, excluding seen tweets
  let tweets-in-range tweets with [
    belief >= min-belief and belief <= max-belief 
    and member? [poster] of self [following] of myself
    and not member? self [seen] of myself
  ]
  
  ;; Limit to 10 tweets if there are more than 10
  if count tweets-in-range > 10 [
    set tweets-in-range n-of 10 tweets-in-range
  ]
  
  report tweets-in-range
end


;;;;;;;;;;;;;;;;;;;;;
;;; BELIEF GLOBAL ;;;
;;;;;;;;;;;;;;;;;;;;;
to-report find-tweets-in-belief-range-global
  let min-belief belief - 0.5
  let max-belief belief + 0.5
  
  ;; Gather tweets within the belief range globally, excluding seen tweets
  let tweets-in-range tweets with [
    belief >= min-belief and belief <= max-belief 
    and not member? self [seen] of myself
  ]
  
  ;; Limit to 10 tweets if there are more than 10
  if count tweets-in-range > 10 [
    set tweets-in-range n-of 10 tweets-in-range
  ]
  
  report tweets-in-range
end


;;;;;;;;;;;;;;
;;; RANDOM ;;;
;;;;;;;;;;;;;;
to-report find-random-tweets
  ;; Select up to 10 random unseen tweets from the entire list
  let unseen-tweets tweets with [not member? self [seen] of myself]
  if count unseen-tweets > 10 [
    report n-of 10 unseen-tweets
  ]
  report unseen-tweets
end


;;;;;;;;;;;;;;;;;;;;;
;;; CHRONOLOGICAL ;;;
;;;;;;;;;;;;;;;;;;;;;
to-report find-most-recent-tweets
  ;; Sort unseen tweets by time-posted in ascending order, within the user's local network
  let sorted-tweets sort-on [time-posted] tweets with [
    member? [poster] of self [following] of myself 
    and not member? self [seen] of myself
  ]
  
  ;; Select up to 10 of the most recent unseen tweets
  if length sorted-tweets > 10 [
    report n-of 10 sorted-tweets
  ]
  report sorted-tweets
end


;;;;;;;;;;;;;;;;;;
;;; POPULARITY ;;;
;;;;;;;;;;;;;;;;;;
to-report find-most-popular-tweets
  ;; Sort unseen tweets by combined popularity score
  let sorted-tweets sort-on [
    retweets + length [followers] of poster
  ] tweets with [not member? self [seen] of myself]
  
  ;; Select up to 10 of the most popular unseen tweets
  if length sorted-tweets > 10 [
    report n-of 10 sorted-tweets
  ]
  report sorted-tweets
end
